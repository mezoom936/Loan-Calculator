/**
 * @author Mina Mekhaiel
 * This class is designed to offer the calculation of multiple types of 
 * interest rates. The class will have the option for users to choose whichever 
 * interest rate they're willing to calculate and calculate the monthly
 * payments of that interest. The class will include six data fields, five 
 * of them would be TextFields and the last one, is just a Button object.
 * The class will also include a method to create panes, the scene and to
 * show the stage. The class will include two private methods. Each to 
 * create an instance of a loan class and call the methods of the loan 
 * class to do the calculation. The class will finally include a main 
 * method to launch the application. 
 */


package loan;


import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class LoanCalculator extends Application
{
	/**
	 * TextField data field which is the loan amount
	 * TextField data field which is the annual rate
	 * TextField data field which is the number of years
	 * TextField data field which is the monthly payments
	 * TextField data field which is the total
	 * Button instance as a data field
	 */
	private TextField tfLoanAmount = new TextField();
	private TextField tfAnnualInterestRate = new TextField();
	private TextField tfNumYears = new TextField();
	private TextField tfMonthlyPayment = new TextField();
	private TextField tfTotal = new TextField();
	private Button btCal = new Button("Calculate");
	
	/**
	 * this method is to create the main pane which is 
	 * a grid pane, radio buttons instances for the 
	 * multiple options. Also this method will align 
	 * the pane contents and will handle the events
	 * to call the other private void methods that 
	 * will have the loan instances .
	 */
	@Override
	public void start(Stage primaryStage) throws Exception 
	{	
		// create a GridPane 
		GridPane pane = new GridPane();	
		pane.setHgap(0); // set a horizontal gap
		pane.setVgap(10); // set a vertical gap
		// creating two Radio Buttons instances for the user to choose
		RadioButton r1 = new RadioButton("Simple Interest");
		RadioButton r2 = new RadioButton("Compound Interest");
		// create a pane for those two radio buttons
		HBox paneForRadioButtons = new HBox(60);
		paneForRadioButtons.setPadding(new Insets(20, 0, 10, 20));
		// adding the radio instances to the pane
		paneForRadioButtons.getChildren().addAll(r1, r2);
		ToggleGroup group = new ToggleGroup(); // creating a toggle instance group
		// toggle the radio button instances
		r1.setToggleGroup(group);
		r2.setToggleGroup(group);
		// adding the radio buttons pane to the grid pane
		pane.add(paneForRadioButtons, 0, 0);
		// adding a new labels to the amount, annual interest,
		// number of years, monthly payments, and the total.
		pane.add(new Label("Loan Amount"), 0, 2);
		pane.add(this.tfLoanAmount, 1, 2);
		pane.add(new Label("Annual Interest Rate"), 0, 3);
		pane.add(this.tfAnnualInterestRate, 1, 3);
		pane.add(new Label("Number of Years"), 0, 4);
		pane.add(this.tfNumYears, 1, 4);
		pane.add(new Label("Monthly Payments"), 0, 5);
		pane.add(this.tfMonthlyPayment, 1, 5);
		pane.add(new Label("Total"), 0, 6);
		pane.add(this.tfTotal, 1, 6);
		// adding the button data field to the grid pane
		pane.add(btCal, 0, 7);
		// set alignment for the pane contents 
		pane.setAlignment(Pos.TOP_CENTER);
		// setting the alignment for the data fields
		this.tfLoanAmount.setAlignment(Pos.BOTTOM_LEFT);
		this.tfAnnualInterestRate.setAlignment(Pos.BOTTOM_LEFT);
		this.tfNumYears.setAlignment(Pos.BOTTOM_LEFT);
		// preventing the following text fields to be edited
		this.tfMonthlyPayment.setEditable(false);
		this.tfTotal.setEditable(false);
		// setting the radio button on action by using lambda
		// to call the private calculateSimple method
		r1.setOnAction(e -> {
			if(r1.isSelected())
			{
				this.btCal.setOnAction(e1 -> calculateSimple());
			}
		});	
		// setting the radio button on action by using lambda
		// to call the private calculateCompound method
		r2.setOnAction(e -> {
			if(r2.isSelected())
			{
				this.btCal.setOnAction(e1 -> calculateCompund());
			}		
		});
		// creating a scene
		Scene scene = new Scene(pane, 500, 300);
		primaryStage.setTitle("Loan Calculator"); // setting the title to the stage
		primaryStage.setScene(scene); // setting a scene
		primaryStage.show(); // calling the show method to show the stage
	}
	/**
	 * method to parse the three data fields and create a loan object
	 * and call the method from the loan class to calculate the monthly
	 * payments get the total. 
	 */
	private void calculateSimple() 
	{
		double interest = Double.parseDouble(this.tfAnnualInterestRate.getText());
		double amount = Double.parseDouble(this.tfLoanAmount.getText());
		int numYears = Integer.parseInt(this.tfNumYears.getText());	
		Loan l = new Loan(amount, interest, numYears);
		this.tfMonthlyPayment.setText(String.format("%.2f", l.getMonthlyPayment()));
		this.tfTotal.setText(String.format("%.2f", l.getTotal()));	
	}
	/**
	 * method to parse the three data fields and create a loan object
	 * and call the method from the loan class to calculate the monthly
	 * payments get the total. 
	 */
	private void calculateCompund()
	{
		// parse the annual interest rate 
		double interest = Double.parseDouble(this.tfAnnualInterestRate.getText());
		// parse the loan amount
		double amount = Double.parseDouble(this.tfLoanAmount.getText());
		// parse the number of years data field
		int numYears = Integer.parseInt(this.tfNumYears.getText());
		Loan l = new Loan(amount, interest, numYears); // creating a loan object 
		// formatting the text field to round the result
		this.tfMonthlyPayment.setText(String.format("%.2f", l.getMonthlyCompound()));
		this.tfTotal.setText(String.format("%.2f", l.getCompoundTotal()));
	}
	/**
	 *  main method to launch the application
	 * @param args
	 */
	public static void main(String[] args)
	{
		Application.launch(args);
	}
}

